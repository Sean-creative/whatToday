<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:beans="http://www.springframework.org/schema/beans"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:websocket="http://www.springframework.org/schema/websocket"
   xmlns:security="http://www.springframework.org/schema/security"
   xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
      http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
      http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
      http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

   <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
   
   <!-- Enables the Spring MVC @Controller programming model -->
   <annotation-driven />

   <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
   <resources mapping="/resources/**" location="/resources/" />

   <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
   <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
      <beans:property name="prefix" value="/WEB-INF/views/" /> 
      <beans:property name="suffix" value=".jsp" />
   </beans:bean>
   
   <context:component-scan base-package="com.hobby.controller" />
   
   <security:global-method-security pre-post-annotations="enabled" secured-annotations="enabled"/>
   
   <!-- 웹 소켓핸들러 -->
    <websocket:handlers>
      <websocket:mapping handler="echoHandler" path="/echo"/>
           <!-- WebSocket Handshake : 웹소켓 핸들러 클래스(echoHandler)가 호출되기전에 HttpSession에 접속하여  -->
           <!-- '이용자 아이디를 추출하는 기능' 등을 인터셉터가 수행하도록 설정 -->
           <websocket:handshake-interceptors>
                   <beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
           </websocket:handshake-interceptors>  
        </websocket:handlers>
        
        <websocket:handlers>
      <websocket:mapping handler="echoHandler2" path="/echo2"/>
           <!-- WebSocket Handshake : 웹소켓 핸들러 클래스(echoHandler)가 호출되기전에 HttpSession에 접속하여  -->
           <!-- '이용자 아이디를 추출하는 기능' 등을 인터셉터가 수행하도록 설정 -->
           <websocket:handshake-interceptors>
                   <beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
           </websocket:handshake-interceptors>
           <websocket:sockjs />   

        </websocket:handlers>
       
        
   <beans:bean id="echoHandler" class="com.hobby.controller.EchoHandler" />
   <beans:bean id="echoHandler2" class="com.hobby.controller.EchoHandler2" />
   
   <!-- NaverLogin Class에 대한 Bean설정 추가 -->
   <beans:bean id="naverLogin" class="com.hobby.sns.NaverLogin" />
   
   <!-- GoogleLogin Class에 대한 Bean설정 추가 -->
   <beans:bean id="googleLogin" class="com.hobby.sns.GoogleLogin" />
   
   

   
<!-- uploadPath는 업로드할 패스를 빈(bean)에 저장하여 의존주입하여 사용하는 역할입니다.
업로드 경로는 주소가 /imgUpload/** 로 접속될 때, 실제 처리는 /resources/imgUpload/ 로 처리합니다. 긴 문자를 짧게 줄일 수 있으며 실제 경로를 숨길 수 있습니다. -->
<!-- 업로드 패스 설정 --> 
<beans:bean class="java.lang.String" id="uploadPath">

 <beans:constructor-arg value="C:\Users\sudal\Desktop\workspace\todaytest-master\src\main\webapp\resources" />
</beans:bean>

<beans:bean class="java.lang.String" id="uploadFolder">
 <beans:constructor-arg value="C:\Users\sudal\Desktop\workspace\todaytest-master\src\main\webapp\resources\img\upload" />

</beans:bean>



<!-- 일반 파일 업로드 경로 -->
<resources mapping="/imgUpload/**" location="/resources/imgUpload/" />

<beans:bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">
 <beans:property name="maxUploadSize" value="10485760"/>
</beans:bean>


<!-- 대체 이미지 경로 -->
<resources mapping="/img/**" location="/resources/img/" />
   
   
</beans:beans>