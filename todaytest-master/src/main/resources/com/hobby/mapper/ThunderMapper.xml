<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 작성자 : 김선우 -->


<mapper namespace="com.hobby.mapper.ThunderMapper">


	<resultMap type="com.hobby.domain.ThunderDetailVO"
		id="ThunderDetailVO">
		<result column="cbNum" property="cbNum" />
		<result column="cbDate" property="cbDate" />
		<result column="cbAppPeriod" property="cbAppPeriod" />
		<result column="cbPlace" property="cbPlace" />
		<result column="cbSupplies" property="cbSupplies" />

		<result column="cbLatitude" property="cbLatitude" />
		<result column="cbLongitude" property="cbLongitude" />

		<result column="cbAddress" property="cbAddress" />

		<result column="distance" property="distance" />
	</resultMap>
	<resultMap type="com.hobby.domain.ThunderVO" id="ThunderVO">
		<result column="cbNum" property="cbNum" />
		<result column="cbName" property="cbName" />
		<result column="cbIntro" property="cbIntro" />
		<result column="cbCategory" property="cbCategory" />
		<result column="cbSubcat" property="cbSubcat" />
		<result column="cbMbnum" property="cbMbnum" />
		<result column="cbHashtag" property="cbHashtag" />
		<result column="cbCity" property="cbCity" />
		<result column="cbDistrict" property="cbDistrict" />
		<result column="cbLeaderNum" property="cbLeaderNum" />
		<result column="cbCurMbnum" property="cbCurMbnum" />

		<result column="cbLeaderName" property="cbLeaderName" />
		<result column="cbMakeDate" property="cbMakeDate" />
		<result column="cbShutDate" property="cbShutDate" />
		<result column="cbType" property="cbType" />
		<result column="cbFinalState" property="cbFinalState" />
		<result column="cbDetailContent" property="cbDetailContent" />
		<result column="cbFile" property="cbFile" />
		<result column="cbThumbImg" property="cbThumbImg" />
		<result column="cbView" property="cbView" />



		<collection property="thunderDetailVO"
			resultMap="ThunderDetailVO"></collection>
	</resultMap>


	<!-- 해당 모임에 대한 정보를 가져올 때 사용 -->
	<select id="read" resultMap="ThunderVO">
		select * from club c, thunderDetail
		td
		where c.cbNum =
		td.cbNum AND c.cbNum=#{cbNum} AND c.cbFinalState =
		'진행중'
	</select>



	<insert id="insert">
		<!-- 기본키(cl_number)는 club객체에서 꺼내다 쓴다. -->
		<selectKey keyProperty="cbNum" resultType="long"
			order="BEFORE">
			select club_seq.nextval FROM DUAL
		</selectKey>

		{
		CALL
		begin
		insert into club
		(cbNum, cbIntro, cbName, cbCategory,
		cbMbnum, cbSubcat, cbHashtag ,cbCity,
		cbDistrict, cbType, cbLeaderNum
		,cbLeaderName, cbCurMbnum, cbMakeDate, cbShutDate, cbFinalState,
		cbFile, cbThumbImg)
		values(#{cbNum}, #{cbIntro}, #{cbName},
		#{cbCategory}, #{cbMbnum},
		#{cbSubcat}, #{cbHashtag}, #{cbCity},
		#{cbDistrict}, #{cbType}, #{cbLeaderNum},
		#{cbLeaderName},
		#{cbCurMbnum}, TO_CHAR(sysdate, 'yyyy/mm/dd hh24:mi:ss'),
		#{thunderDetailVO.cbDate}, #{cbFinalState},
		#{cbFile}, #{cbThumbImg});


		insert
		into
		thunderDetail
		(cbNum,cbDate,
		cbAppPeriod, cbPlace, cbSupplies,
		cbLatitude, cbLongitude, cbAddress)
		values(#{cbNum},
		#{thunderDetailVO.cbDate},
		#{thunderDetailVO.cbAppPeriod},
		#{thunderDetailVO.cbPlace},
		#{thunderDetailVO.cbSupplies},
		#{thunderDetailVO.cbLatitude},
		#{thunderDetailVO.cbLongitude},
		#{thunderDetailVO.cbAddress} );


		END
		}
		<!-- INSERT ALL into club(cl_number, cl_name, cl_subclass) values(#{cl_number}, 
			#{cl_name}, #{cl_subclass}) into club_detail(cl_number,cl_date, cl_app_date, 
			cl_place, cl_supplies, cl_file) values(#{cl_number}, #{club_detailVO.cl_date}, 
			#{club_detailVO.cl_app_date} ,#{club_detailVO.cl_place}, #{club_detailVO.cl_supplies}, 
			#{club_detailVO.cl_file}) select * from dual -->
	</insert>


	<insert id="insertJoin">
		insert into clubmember(usrnum, cbnum, cbtype, cbname,
		usrname, cbmbstresult,
		CBAPPDATE)
		values(#{loginUser.usrNum},
		#{clubVO.cbNum}, #{clubVO.cbType}, #{clubVO.cbName},
		#{loginUser.usrName}, #{joinState}, TO_CHAR(sysdate, 'yyyy/mm/dd
		hh24:mi:ss'))
	</insert>

	<insert id="insertJoinHistory">
		insert into clubjoinhistory(cbjoinnum, usrnum, cbnum,
		cbtype, cbname,
		CBJOINSTATERESULT, CBJOINSTATEUPDATEDATE)
		values(CLUBJOINHISTORY_SEQ.NEXTVAL, #{loginUser.usrNum},
		#{clubVO.cbNum}, #{clubVO.cbType}, #{clubVO.cbName}, #{joinState},
		TO_CHAR(sysdate, 'yyyy/mm/dd hh24:mi:ss'))
	</insert>

	<update id="updateJoin">
		update clubmember set
		cbmbstresult=#{joinState}
		where
		usrnum=#{loginUser.usrNum} AND cbnum=#{clubVO.cbNum}
	</update>


	<!-- 로그인한 유저가 해당 모임에 대해서 어떤 상태인지 반환 ex) 가입승인, 승인대기중 -->
	<select id='readCbMemByUsrNum' resultType="String">
		select cbmbstresult
		from clubmember where usrnum=#{usrNum}
		AND
		cbnum=#{cbNum}
	</select>

	<!-- 해당 클럽에 대한 멤버들의 가입 정보를 가져오는 SQL -->
	<select id='getJoinList'
		resultType="com.hobby.domain.ClubMemberVO">
		select usrnum, cbnum, cbtype, cbname, usrname,
		cbmbstresult,CBAPPDATE
		from clubmember
		where cbnum=#{cbnum} AND
		cbmbstresult=#{cbmbstresult}
	</select>



	<!-- 모임삭제는 모임의 상태가 변경되어야 한다. -->
	<update id="delete">
		update club set
		cbFinalState = '폐쇄'
		where cbNum=
		#{cbNum}
	</update>


	<!-- 바뀔 수 있는 부분만 바꿀 것!! -->
	<update id="update">
		{
		CALL
		begin

		update club set
		cbIntro=#{cbIntro},
		cbName=#{cbName},
		cbCategory=#{cbCategory},
		cbSubcat=#{cbSubcat},

		cbMbnum=#{cbMbnum},
		cbHashtag=#{cbHashtag},
		cbCity=#{cbCity},
		cbDistrict=#{cbDistrict},
		cbCurMbnum=#{cbCurMbnum},

		cbShutDate=#{thunderDetailVO.cbDate},

		cbFile = #{cbFile},
		cbThumbImg =
		#{cbThumbImg}
		where cbNum = #{cbNum};



		update
		thunderDetail set
		cbDate=#{thunderDetailVO.cbDate},
		cbAppPeriod=#{thunderDetailVO.cbAppPeriod},
		cbPlace=#{thunderDetailVO.cbPlace},
		cbSupplies=#{thunderDetailVO.cbSupplies},

		cbLatitude=#{thunderDetailVO.cbLatitude},
		cbLongitude=#{thunderDetailVO.cbLongitude},
		cbAddress=#{thunderDetailVO.cbAddress}
		where cbNum = #{cbNum};

		END
		}
	</update>

	<update id="clubViews">
		update club set cbView = cbView + 1
		where cbNum =
		#{cbNum}
	</update>


	<sql id="criteria">
		<trim prefix="(" suffix=") AND " prefixOverrides="AND|OR">


			<if
				test="category != null  and category != '관심분야 선택' and category != '' ">
				AND cbCategory = #{category}
			</if>

			<if
				test="subclass != null and subclass != '모임 선택' and subclass != ''">
				AND cbSubcat = #{subclass}
			</if>

			<if test="city != null and city != '지역 선택' and city != ''">
				AND cbCity = #{city}
			</if>

			<if
				test="district != null and district != '세부지역 선택' and district != ''">
				AND cbDistrict = #{district}
			</if>


			<choose>
				<when test="'모임명'.equals(searchBy)">
					<if test="keyword != null and keyword!= ''">
						AND cbName like '%'||#{keyword}||'%'
					</if>
				</when>
				<when test="'글작성자'.equals(searchBy)">
					<if test="keyword != null and keyword!= ''">
						AND cbLeaderName like '%'||#{keyword}||'%'
					</if>
				</when>
				<when test="'해시태그'.equals(searchBy)">
					<if test="keyword != null and keyword!= ''">
						AND cbHashtag like '%'||#{keyword}||'%'
					</if>
				</when>
				<when test="'모임종류'.equals(searchBy)">
					<if test="keyword != null and keyword!= ''">
						AND (cbcategory like '%'||#{keyword}||'%' or cbsubcat
						like '%'||#{keyword}||'%')
					</if>
				</when>

			</choose>

		</trim>
	</sql>


	<!-- 거리제한 두고 리스트 페이징 처리 -->
	<select id="getListWithPaging" resultMap="ThunderVO">
	<![CDATA[
	select cbNum, cbName, cbMakeDate, cbDistrict, cbCurMbnum, cbMbnum, cbDate, distance , cbView, cbappperiod,cbThumbImg,cbFile, cbCategory, cbSubcat
	from ( 	
				select rownum rn, cbNum, cbName, cbMakeDate, cbDistrict, cbCurMbnum, cbMbnum, cbDate, distance, cbView,cbappperiod,cbThumbImg,cbFile, cbCategory, cbSubcat
				from
				(
							select  c.cbNum, c.cbName, c.cbMakeDate, c.cbDistrict, c.cbCurMbnum, c.cbMbnum, td.cbDate,    ROUND(DISTNACE_WGS84(#{userLatitude}, #{userLongitude}, cblatitude, cblongitude) ,2) distance, c.cbView, td.cbappperiod,c.cbThumbImg, c.cbFile, c.cbCategory, c.cbSubcat
							from club c, thunderDetail td				
							where  
								]]>

		<include refid="criteria"></include>
							
							<![CDATA[  
							c.cbNum = td.cbNum AND c.cbType='번개모임' AND c.cbFinalState = '진행중'
							order by ${orderBy}	        	       		     
				 )
				where distance < 20 AND rownum          <= #{pageNum} * #{amount}
			)				
	 where rn > (#{pageNum}-1) * #{amount} ]]>
	</select>



	<select id="getTotalCount" resultType="int">
	<![CDATA[	select  count(*)
				from
				(
							select   ROUND(DISTNACE_WGS84(#{userLatitude}, #{userLongitude}, cblatitude, cblongitude) ,2) distance
							from club c, thunderDetail td				
							where ]]>
		<include refid="criteria"></include>
	<![CDATA[				c.cbNum = td.cbNum AND c.cbType='번개모임'  AND c.cbFinalState = '진행중' 							
				 )                 
				where distance <20 ]]>
	</select>


	<update id="updateFinalState">
		<![CDATA[ 
		UPDATE (select * from club c, thunderdetail t where c.cbnum = t.cbnum) 
		SET CBFINALSTATE='폐쇄' 
		where TO_DATE(cbdate , 'yyyy-MM-dd"T"HH24:MI') <= sysdate 
		]]>
	</update>



	<select id="readLike" resultType="HashMap">
		<![CDATA[ 
		select likeCheck
		from clublike
		where usrNum = #{usrNum} AND cbNum = #{cbNum}
			]]>
	</select>

	<insert id="insertLikeBtn">
<![CDATA[ 	insert into clubLike values (clubLike_seq.nextval, #{usrNum}, #{cbNum}, 1) ]]>
	</insert>


	<update id="updateLikeCheck" >
		<![CDATA[ 
	    update clublike 
		set likeCheck = 0				
		where usrNum = #{usrNum} AND cbNum = #{cbNum}		
			]]>
	</update>
	
	<update id="updateLikeCheck1" >
		<![CDATA[ 
		update clublike 
		set likeCheck = 1				
		where usrNum = #{usrNum} AND cbNum = #{cbNum}		
			]]>
	</update>
	
	
	
	
</mapper>

